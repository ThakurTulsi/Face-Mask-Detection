!pip install opencv-python
import cv2
import matplotlib.pyplot as plt
img = cv2.imread('./Images/./No_Mask/./smiling.png')   
    img.shape #import matplotlib.pyplot as plt
plt.imshow(img)
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
img.shape   #900 is number of rows 600 is number of columns and 3 is color channel
img[0]
import matplotlib.pyplot as plt
plt.imshow(img)
while True: 
    cv2.imshow('result', img)
    if cv2.waitKey(2) == 27: ##27 is ASCII value of Escape
        break
cv2.destroyAllWindows()        
haar_data = cv2.CascadeClassifier(cv2.data.haarcascades+'haarcascade_frontalface_default.xml')
haar_data.detectMultiScale(img)
#cv2.rectangle(img, (x,y),(w,h),(b,g,r),border_thickness)
while True: 
    faces = haar_data.detectMultiScale(img)
    for x,y,w,h in faces:
        cv2.rectangle(img, (x,y),(x+w,y+h), (255,0,255),4)
    cv2.imshow('result', img)
    if cv2.waitKey(2) == 27: ##27 is ASCII value of Escape
        break
cv2.destroyAllWindows()  

capture = cv2.VideoCapture(0)
data=[]
while True:
    flag, img = capture.read()
    if flag:
        faces = haar_data.detectMultiScale(img)
        for x,y,w,h in faces:
            cv2.rectangle(img, (x,y),(x+w,y+h), (255,0,255),4)
            face = img[y:y+h, x:x+w, :]
            face = cv2.resize(face, (50,50))
            print(len(data))
            if len(data) < 400:
                data.append(face)
        cv2.imshow('result', img)
        if cv2.waitKey(2) == 27 or len(data) >= 200: ##27 is ASCII value of Escape
            break
capture.release() 
cv2.destroyAllWindows()
import numpy as np
np.save('without_mask.npy', data)
np.save('with_mask.npy', data)
plt.imshow(data[0])
